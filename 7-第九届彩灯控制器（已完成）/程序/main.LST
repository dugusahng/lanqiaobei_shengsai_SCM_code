C51 COMPILER V9.00   MAIN                                                                  04/04/2022 13:03:53 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"reg52.h"
   2          #include"key.h"
   3          #include"iic.h"
   4          #include "intrins.h"
   5          #define u8 unsigned char
   6          #define u16 unsigned int
   7          sfr AUXR = 0x8e;
   8          
   9          u8 smg_duan[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  10          u8 smg_wei[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
  11          
  12          u8 work_mode_1[] = {~0x01,~0x02,~0x04,~0x08,~0x10,~0x20,~0x40,~0x80};
  13          u8 work_mode_2[] = {~0x80,~0x40,~0x20,~0x10,~0x08,~0x04,~0x02,~0x01};
  14          u8 work_mode_3[] = {~0x81,~0x42,~0x24,~0x18};
  15          u8 work_mode_4[] = {~0x18,~0x24,~0x42,~0x81};
  16          
  17          u8 table1[8];
  18          u8 table2[8];
  19          extern u16 time_f[4] = 0;
  20          
  21          u8 key_count,pwm,dac;
  22          extern u16      time = 400;
  23          static u16 count,flash_count,pwm_count;
  24          bit key_flag,flash_flag,time_flag,pwm_flag,ad_flag,turn_flag,led_flag ;
  25          extern u8  work_mode = 1,s6_mode = 0;
  26          extern bit s6_flag = 0,open_flag = 1,pwm_buff = 0;
  27          
  28          void HC573(u8 n,u8 value);
  29          void Timer0Init(void);
  30          void LEDworking();
  31          void display(void);
  32          void table_convert(void);
  33          void initsystem();
  34          
  35          void main()
  36          {       
  37   1              initsystem();
  38   1              while(1)
  39   1              {
  40   2                              EA = 0;
  41   2                              dac = read_8591_channel(3);
  42   2                              EA = 1;                                         
  43   2                              ad_flag = 0;
  44   2                              if(dac<63)pwm = 2;
  45   2                              
  46   2                              else if((dac>=63)&&(dac<127))pwm = 4;
  47   2                              
  48   2                              else if((dac>=127)&&(dac<191))pwm = 6;
  49   2                              
  50   2                              else if((dac>=191)&&(dac<255))pwm = 8;
  51   2                              EA = 0;
  52   2                              LEDworking();
  53   2                              EA = 1;
  54   2                      if(key_flag == 1){key_flag = 0;Keyproc();}
  55   2                      table_convert();
C51 COMPILER V9.00   MAIN                                                                  04/04/2022 13:03:53 PAGE 2   

  56   2              }
  57   1      }
  58          
  59          void Timer0isr() interrupt 1
  60          {
  61   1              if(++key_count == 12){key_count = 0;key_flag = 1;}
  62   1              if(++flash_count == 800)
  63   1              {
  64   2                      flash_count = 0;
  65   2                      flash_flag = ~flash_flag;
  66   2      
  67   2              }
  68   1                       
  69   1                      if(++count >= time_f[work_mode - 1]&&open_flag == 1)
  70   1                      {
  71   2                              turn_flag = 1;  //流转间隔标志
  72   2                              count = 0;         
  73   2                      }
  74   1              
  75   1              if(++pwm_count == 10) 
  76   1              {
  77   2                
  78   2                      pwm_count = 0; 
  79   2              }
  80   1              
  81   1              if(pwm_count <= pwm)led_flag = 1; //pwm标志
  82   1              if(pwm_count > pwm)led_flag = 0;
  83   1              display();
  84   1      }
  85          
  86          void Delay10ms();
  87          
  88          void initsystem()
  89          {
  90   1              HC573(5,0x00);
  91   1              HC573(4,0xff);
  92   1              Timer0Init();
  93   1              time_f[0] = read_byte_at24c02(0x00) * 10;
  94   1              Delay10ms();
  95   1              time_f[1] = read_byte_at24c02(0x01) * 10;
  96   1              Delay10ms();
  97   1              time_f[2] = read_byte_at24c02(0x02) * 10;
  98   1              Delay10ms();
  99   1              time_f[3] = read_byte_at24c02(0x03) * 10;
 100   1              Delay10ms();
 101   1      }
 102          
 103          void LEDworking()
 104          {
 105   1              static a = 0x01;
 106   1              static b = 0x80;
 107   1              static count_led;
 108   1      
 109   1              if(led_flag == 1)
 110   1              {
 111   2                      if(work_mode == 1)
 112   2                      {               
 113   3                              HC573(4,~a);
 114   3                              if(turn_flag == 1)
 115   3                              {
 116   4                                      a=_crol_(a,1);
 117   4                                      turn_flag = 0;
C51 COMPILER V9.00   MAIN                                                                  04/04/2022 13:03:53 PAGE 3   

 118   4                              }
 119   3                      }
 120   2      
 121   2                      if(work_mode == 2)
 122   2                      {
 123   3                              HC573(4,~b);
 124   3                              if(turn_flag == 1)
 125   3                              {
 126   4                                      b=_cror_(b,1);
 127   4                                      turn_flag = 0;
 128   4                              }
 129   3                      }
 130   2      
 131   2                      if(work_mode == 3)
 132   2                      {
 133   3                              if(turn_flag == 1)
 134   3                              {
 135   4                                      turn_flag = 0;
 136   4                                      if(++count_led == 5){count_led = 1;}
 137   4                              }       
 138   3                              if(count_led == 1){HC573(4,~0x81);}
 139   3                              if(count_led == 2){HC573(4,~0x42);}
 140   3                              if(count_led == 3){HC573(4,~0x24);}
 141   3                              if(count_led == 4){HC573(4,~0x18);}                             
 142   3                      }
 143   2      
 144   2                      if(work_mode == 4)
 145   2                      {
 146   3                              if(turn_flag == 1)
 147   3                              {
 148   4                                      turn_flag = 0;
 149   4                                      if(++count_led == 5){count_led = 1;}
 150   4                              }               
 151   3                              if(count_led == 1){HC573(4,~0x18);}     
 152   3                              if(count_led == 2){HC573(4,~0x24);}                                     
 153   3                              if(count_led == 3){HC573(4,~0x42);}     
 154   3                              if(count_led == 4){HC573(4,~0x81);}                                             
 155   3                  }
 156   2              }
 157   1              else if(led_flag == 0){HC573(4,0xff);}  
 158   1      }
 159          
 160          void display(void)
 161          {
 162   1              static u8 i;
 163   1              HC573(7,0xff);
 164   1              HC573(6,smg_wei[i]);
 165   1              if(s6_flag == 1){HC573(7,table1[i]);}
 166   1              if((pwm_buff == 1)&&(s6_flag == 0)){HC573(7,table2[i]);}        
 167   1              i++;
 168   1              if(i >= 8) i = 0;
 169   1      }
 170          
 171          void table_convert(void)
 172          {
 173   1              if((flash_flag == 1)&&(s6_mode == 1))
 174   1              {
 175   2                      table1[0] = smg_duan[time_f[work_mode - 1] % 10];
 176   2                      table1[1] = smg_duan[time_f[work_mode - 1] / 10 % 10];
 177   2                      table1[2] = smg_duan[time_f[work_mode - 1] / 100 %10];
 178   2                      table1[3] = smg_duan[time_f[work_mode - 1] / 1000];
 179   2                      table1[4] = 0xff;
C51 COMPILER V9.00   MAIN                                                                  04/04/2022 13:03:53 PAGE 4   

 180   2                      table1[5] = 0xbf;
 181   2                      table1[6] = smg_duan[work_mode];                
 182   2                      table1[7] = 0xbf;
 183   2              }
 184   1                      if((flash_flag == 0)&&(s6_mode == 1))
 185   1              {
 186   2                      table1[0] = smg_duan[time_f[work_mode - 1] % 10];
 187   2                      table1[1] = smg_duan[time_f[work_mode - 1] / 10 % 10];
 188   2                      table1[2] = smg_duan[time_f[work_mode - 1] / 100 %10];
 189   2                      table1[3] = smg_duan[time_f[work_mode - 1] / 1000];
 190   2                      table1[4] = 0xff;
 191   2                      table1[5] = 0xbf;
 192   2                      table1[6] = 0xff;               
 193   2                      table1[7] = 0xbf;
 194   2              }
 195   1              if((flash_flag == 1)&&(s6_mode == 2))
 196   1              {
 197   2                      table1[0] = smg_duan[time_f[work_mode - 1] % 10];
 198   2                      table1[1] = smg_duan[time_f[work_mode - 1] / 10 % 10];
 199   2                      table1[2] = smg_duan[time_f[work_mode - 1] / 100 %10];
 200   2                      table1[3] = smg_duan[time_f[work_mode - 1] / 1000];
 201   2                      table1[4] = 0xff;
 202   2                      table1[5] = 0xbf;
 203   2                      table1[6] = smg_duan[work_mode];                
 204   2                      table1[7] = 0xbf;
 205   2              }
 206   1              if((flash_flag == 0)&&(s6_mode == 2))
 207   1              {
 208   2                      table1[0] = 0xff;
 209   2                      table1[1] = 0xff;
 210   2                      table1[2] =     0xff;
 211   2                      table1[3] = 0xff;
 212   2                      table1[4] = 0xff;
 213   2                      table1[5] = 0xbf;
 214   2                      table1[6] = smg_duan[work_mode];                
 215   2                      table1[7] = 0xbf;
 216   2              }
 217   1      
 218   1              if((pwm_buff == 1)&&(s6_flag == 0))
 219   1              {
 220   2                      table2[0] = smg_duan[pwm];
 221   2                      table2[1] = 0xbf;
 222   2                      table2[2] = 0xff;
 223   2                      table2[3] = 0xff;
 224   2                      table2[4] = 0xff;
 225   2                      table2[5] = 0xff;
 226   2                      table2[6] = 0xff;
 227   2                      table2[7] = 0xff;
 228   2              }
 229   1              else if((s6_flag == 0)&&(pwm_buff == 0))
 230   1              {
 231   2                      HC573(7,0xff);
 232   2              }
 233   1      }
 234          
 235          void HC573(u8 n,u8 value)
 236          {
 237   1              switch(n)
 238   1              {
 239   2                      case 4: P2 = (P2 & 0x1f) | 0x80; P0 = value; P2 &= 0x1f; break;
 240   2                      case 5: P2 = (P2 & 0x1f) | 0xa0; P0 = value; P2 &= 0x1f; break;
 241   2                      case 6: P2 = (P2 & 0x1f) | 0xc0; P0 = value; P2 &= 0x1f; break;
C51 COMPILER V9.00   MAIN                                                                  04/04/2022 13:03:53 PAGE 5   

 242   2                      case 7: P2 = (P2 & 0x1f) | 0xe0; P0 = value; P2 &= 0x1f; break;
 243   2              }
 244   1      }
 245          
 246          void Timer0Init(void)           //T0 1ms     @12.000MHz
 247          {
 248   1              AUXR |= 0x80;           //定时器时钟1T模式
 249   1              TMOD &= 0xF0;           //设置定时器模式
 250   1              TL0 = 0x20;             //设置定时0初始值
 251   1              TH0 = 0xD1;             //设置定时0初始值
 252   1              TF0 = 0;                //清除TF0标志
 253   1              TR0 = 1;                //定时器0开始计时
 254   1              ET0 = 1;  
 255   1              EA = 1;
 256   1      }
 257          
 258          void Delay10ms()                //@12.000MHz
 259          {
 260   1              unsigned char i, j;
 261   1      
 262   1              i = 117;
 263   1              j = 184;
 264   1              do
 265   1              {
 266   2                      while (--j);
 267   2              } while (--i);
 268   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     86    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     10    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
