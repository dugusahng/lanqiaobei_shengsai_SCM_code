C51 COMPILER V9.00   MAIN                                                                  04/03/2022 20:34:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"reg52.h"
   2          #include"key.h"
   3          #include"onewire.h"
   4          #include"ds1302.h"
   5          #include "intrins.h"
   6          #define u8 unsigned char
   7          #define u16 unsigned int
   8          sfr AUXR = 0x8e;
   9          
  10          u8 smg_duan[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  11          u8 smg_wei[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
  12          u8 table_1[8],table_2[8],table_3[8];
  13          u8 temp[10];
  14          
  15          u8 temperature,count_key;
  16          u16 count_temp,count_flash,count_1;
  17          bit temp_flag,key_flag,flash_flag;
  18          extern u8 trg = 0,cont = 0,count = 1,time = 1,n = 0,mode = 1,t = 0;
  19          extern u8 sec = 0x50,min = 0x59,hour = 0x23;     //定义时间23点59分50秒
  20          extern u16 count_time = 500;
  21          extern bit L1_flag = 0,s6_flag = 0;
  22          
  23          void Delay100ms();                 //函数声明
  24          void Timer0Init(void);
  25          void table_convert();
  26          
  27          void main()
  28          {       
  29   1              u8 x;
  30   1              P2 = (P2 & 0x1f) | 0xa0; P0 = 0x00; P2 &= 0x1f;   //灭蜂鸣器继电器
  31   1              P2 = (P2 & 0x1f) | 0x80; P0 = 0xff; P2 &= 0x1f;  //led全灭
  32   1              for(x = 0;x < 10; x++){temperature = rd_temperature();Delay100ms();} //把温度初始值85读掉
  33   1              init_time();                    //时间初始化
  34   1              Timer0Init();                   //定时器初始化
  35   1              while(1)
  36   1              {       
  37   2                      if(mode == 2)
  38   2                      {
  39   3                      if(temp_flag)
  40   3                      {
  41   4                              temp_flag = 0;
  42   4                              t++;if(t >= 11)t = 10;                                  
  43   4                              temp[t-1] = rd_temperature();                                           
  44   4                      }               
  45   3                      }
  46   2      
  47   2                      if(t == 10)
  48   2                      {       
  49   3                              mode = 3;                                       
  50   3                                              
  51   3                              if(L1_flag == 1)         //按下s6时，灯灭
  52   3                              {                               
  53   4                                      P2 = (P2 & 0x1f) | 0x80; P0 = 0xff; P2 &= 0x1f;                 
  54   4                              }
  55   3                              else     //否则，灯亮
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 20:34:58 PAGE 2   

  56   3                              {
  57   4                                      P2 = (P2 & 0x1f) | 0x80; P0 = ~0x01; P2 &= 0x1f;
  58   4                              }
  59   3                      }
  60   2      
  61   2                      if(key_flag){key_flag = 0;Keyproc();}     //执行按键函数
  62   2      
  63   2                      table_convert();                   //数组要放到主函数里一直读
  64   2      
  65   2                      read_ds1302();                     //读时钟
  66   2              }
  67   1      
  68   1      }
  69          
  70          void display();             //函数声明
  71          void Timer0isr() interrupt 1
  72          {
  73   1              count_flash++;count_key++;
  74   1      
  75   1              if(mode == 2)
  76   1              {
  77   2                      count_temp++;
  78   2                      if(count_temp >= count_time)       //当计时 等于 设定的延时
  79   2                      {               
  80   3                              count_temp = 0;
  81   3                              temp_flag = 1;
  82   3                      }
  83   2              }
  84   1                      
  85   1              if(count_flash == 500){count_flash = 0;flash_flag =~ flash_flag;} //1s 闪烁
  86   1                                       
  87   1              if(mode == 3)     
  88   1              {
  89   2                      if((temp[9] != 0)&&(L1_flag == 1))  //当温度数组读完时，并按下s6时，启动计时
  90   2                      {
  91   3                              if(++count_1 == 500)               //1s
  92   3                              {                               
  93   4                                      n++;if(n >= 10)n = 9;           //加到9停止             
  94   4                                      count_1 = 0;
  95   4                              }
  96   3                      }
  97   2              }
  98   1                      
  99   1              if(count_key == 6){count_key = 0;key_flag = 1;}                         //12ms，独立按键
 100   1              
 101   1              display();                              //2ms，数码管显示函数
 102   1      }
 103          
 104          void display()                          //数码管显示函数
 105          {
 106   1              static u8 i;                    //定义成静态变量，下次调用值不变
 107   1              P2 = (P2 & 0x1f) | 0xe0; P0 = 0xff; P2 &= 0x1f;  //数码管消隐
 108   1              P2 = (P2 & 0x1f) | 0xc0; P0 = smg_wei[i]; P2 &= 0x1f;   //位选
 109   1      
 110   1              if(mode == 1)                                    //mode1段选
 111   1              {
 112   2                      P2 = (P2 & 0x1f) | 0xe0; P0 = table_1[i]; P2 &= 0x1f;
 113   2              }
 114   1              if(mode == 2)                     //mode2段选
 115   1              {
 116   2                      P2 = (P2 & 0x1f) | 0xe0; P0 = table_2[i]; P2 &= 0x1f;
 117   2              }
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 20:34:58 PAGE 3   

 118   1              if(mode == 3)              //mode2段选
 119   1              {
 120   2                      P2 = (P2 & 0x1f) | 0xe0; P0 = table_3[i]; P2 &= 0x1f; 
 121   2              }
 122   1              i++;if(i >= 8)i = 0;            //能使i在0-8内循环
 123   1      }
 124          
 125          void table_convert()               //将数码管显示的内容写到数组里
 126          {
 127   1              if(mode == 1)
 128   1              {
 129   2              table_1[0] = smg_duan[time % 10];
 130   2              table_1[1] = smg_duan[time / 10];
 131   2              table_1[2] = 0xbf;
 132   2              table_1[3] = 0xff;
 133   2              table_1[4] = 0xff;
 134   2              table_1[5] = 0xff;
 135   2              table_1[6] = 0xff;
 136   2              table_1[7] = 0xff;
 137   2              }
 138   1      
 139   1              if(mode == 2)
 140   1              {
 141   2                      if(flash_flag)
 142   2                      {
 143   3                              table_2[0] = smg_duan[sec%10];                  
 144   3                              table_2[1] = smg_duan[sec/10];
 145   3                              table_2[2] = 0xff;
 146   3                              table_2[3] = smg_duan[min%10];
 147   3                              table_2[4] = smg_duan[min/10];
 148   3                              table_2[5] = 0xff;
 149   3                              table_2[6] = smg_duan[hour%10];
 150   3                              table_2[7] = smg_duan[hour/10];                 
 151   3                      }
 152   2                      else
 153   2                      {       
 154   3                              table_2[0] = smg_duan[sec%10];
 155   3                              table_2[1] = smg_duan[sec/10];
 156   3                              table_2[2] = 0xbf;
 157   3                              table_2[3] = smg_duan[min%10];
 158   3                              table_2[4] = smg_duan[min/10];
 159   3                              table_2[5] = 0xbf;      
 160   3                              table_2[6] = smg_duan[hour%10];
 161   3                              table_2[7] = smg_duan[hour/10];         
 162   3                      
 163   3                      }
 164   2              }
 165   1              if(mode == 3)
 166   1              {
 167   2                      table_3[0] = smg_duan[temp[n]%10];
 168   2                      table_3[1] = smg_duan[temp[n]/10];      
 169   2                      table_3[2] = 0xbf;
 170   2                      table_3[3] = 0xff;
 171   2                      table_3[4] = 0xff;
 172   2                      table_3[5] = smg_duan[n];
 173   2                      table_3[6] = smg_duan[0];
 174   2                      table_3[7] = 0xbf;
 175   2              }
 176   1      }
 177          
 178          void Timer0Init(void)           //2毫秒@12.000MHz
 179          {
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 20:34:58 PAGE 4   

 180   1              AUXR |= 0x80;           //定时器时钟1T模式
 181   1              TMOD &= 0xF0;           //设置定时器模式
 182   1              TL0 = 0x40;             //设置定时初始值
 183   1              TH0 = 0xA2;             //设置定时初始值
 184   1              TF0 = 0;                //清除TF0标志
 185   1              TR0 = 1;                //定时器0开始计时
 186   1              ET0 = 1;
 187   1              EA = 1;
 188   1      }
 189          
 190          void Delay100ms()               //@12.000MHz
 191          {
 192   1              unsigned char i, j, k;
 193   1      
 194   1              _nop_();
 195   1              _nop_();
 196   1              i = 5;
 197   1              j = 144;
 198   1              k = 71;
 199   1              do
 200   1              {
 201   2                      do
 202   2                      {
 203   3                              while (--k);
 204   3                      } while (--j);
 205   2              } while (--i);
 206   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    717    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     73       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
