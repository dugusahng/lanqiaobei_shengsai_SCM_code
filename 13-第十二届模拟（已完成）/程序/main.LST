C51 COMPILER V9.00   MAIN                                                                  04/08/2022 08:29:21 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"reg52.h"
   2          #include"key.h"
   3          #include"iic.h"
   4          sfr AUXR = 0x8e;
   5          #define u8 unsigned char
   6          #define u16 unsigned int
   7          
   8          u8  smg_du[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0XF8,0x80,0x90};//数码管段码
   9          u8  smg_we[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};//数码管位选
  10          u8 table_VAIN[8];          //电压
  11          u8 table_VAIN_par[8];  //电压参数
  12            
  13          u8 count_key,count_dac;
  14          u16 VAIN1,VAIN3;
  15          bit key_flag,dac_flag;
  16          extern u8 trg = 0,cont = 0;
  17          extern u16 VP1 = 250,VP3 = 300;
  18          extern bit VIN_mode = 0,table_flag = 0;
  19          float dac1,dac3;
  20          
  21          void Timer0Init(void);
  22          void Delay10ms();
  23          void HC573(u8 n,u8 value);
  24          void table_convert();
  25          void LEDproc();
  26          
  27          void main()
  28          {
  29   1              HC573(5,0x00);
  30   1              HC573(4,0xff);  
  31   1              Wirte_8591(102);
  32   1              Timer0Init();
  33   1              while(1)
  34   1              {
  35   2                      table_convert();
  36   2              
  37   2                      if(dac_flag)
  38   2                      {
  39   3      //                      EA = 0;
  40   3                              dac1 = Read_8591(1);
  41   3                              VAIN1 = (u16)dac1 * 100 / 51.0f;
  42   3      
  43   3                              dac3 = Read_8591(3);
  44   3                              VAIN3 = (u16)dac3 * 100 / 51.0f;
  45   3      //                      EA = 1;
  46   3                      }
  47   2                      LEDproc();
  48   2                      if(key_flag){key_flag = 0;Keyproc();}           
  49   2              }
  50   1      }
  51          
  52          void display();
  53          void Timer0isr() interrupt 1 
  54          {
  55   1              count_key++;count_dac++;
C51 COMPILER V9.00   MAIN                                                                  04/08/2022 08:29:21 PAGE 2   

  56   1              if(count_key >= 6){count_key = 0;key_flag = 1;}
  57   1              if(count_dac >= 45){count_dac = 0;dac_flag = 1;}        
  58   1              display();
  59   1      }
  60          
  61          void LEDproc()
  62          {
  63   1              EA = 0;
  64   1              P0 = 0xff;
  65   1              if(VAIN1 > VP1)
  66   1              {
  67   2                      P2 = (P2 & 0x1f) | 0x80; P0 &= ~0x01; P2 &= 0x1f; 
  68   2              }
  69   1              else
  70   1              {
  71   2                      P2 = (P2 & 0x1f) | 0x80; P0 |= ~0x01; P2 &= 0x1f;
  72   2              }
  73   1      
  74   1              if(VAIN3 > VP3)
  75   1              {
  76   2                      P2 = (P2 & 0x1f) | 0x80; P0 &= ~0x02; P2 &= 0x1f;
  77   2              }
  78   1              else
  79   1              {
  80   2                      P2 = (P2 & 0x1f) | 0x80; P0 |= 0x02; P2 &= 0x1f;
  81   2              }
  82   1      
  83   1              if(VIN_mode)
  84   1              {
  85   2                      P2 = (P2 & 0x1f) | 0x80; P0 |= 0x04; P2 &= 0x1f;
  86   2              }
  87   1              else
  88   1              {
  89   2                      P2 = (P2 & 0x1f) | 0x80; P0 &= ~0x04; P2 &= 0x1f;
  90   2              }
  91   1      
  92   1              if(table_flag)
  93   1              {
  94   2                      P2 = (P2 & 0x1f) | 0x80; P0 |= 0x08; P2 &= 0x1f;
  95   2              }
  96   1              else
  97   1              {
  98   2                      P2 = (P2 & 0x1f) | 0x80; P0 &= ~0x08; P2 &= 0x1f;
  99   2              }
 100   1              if(VAIN1 > VAIN3)
 101   1              {
 102   2                      P2 = (P2 & 0x1f) | 0x80; P0 &= ~0x10; P2 &= 0x1f;
 103   2              }
 104   1              else
 105   1              {
 106   2                      P2 = (P2 & 0x1f) | 0x80; P0 |= 0x10; P2 &= 0x1f;
 107   2              } 
 108   1              EA = 1;         
 109   1      }
 110          
 111          
 112          
 113          void display()
 114          {
 115   1              static u8 i;
 116   1              HC573(7,0xff);
 117   1              HC573(6,smg_we[i]);
C51 COMPILER V9.00   MAIN                                                                  04/08/2022 08:29:21 PAGE 3   

 118   1              if(table_flag)HC573(7,table_VAIN_par[i]);
 119   1              else HC573(7,table_VAIN[i]);
 120   1              
 121   1              i++;if(i >= 8)i = 0;
 122   1      }
 123          
 124          void table_convert()
 125          {
 126   1              if(table_flag == 0)
 127   1              {
 128   2                      if(VIN_mode == 0)
 129   2                      {
 130   3                              table_VAIN[0] = smg_du[VAIN1 % 10];
 131   3                              table_VAIN[1] = smg_du[VAIN1 / 10 % 10];
 132   3                              table_VAIN[2] = smg_du[VAIN1 / 100] & 0x7f;
 133   3                              table_VAIN[3] = 0xff;
 134   3                              table_VAIN[4] = 0xff;
 135   3                              table_VAIN[5] = 0xff;
 136   3                              table_VAIN[6] = smg_du[1];
 137   3                              table_VAIN[7] = 0xc1;
 138   3                      }
 139   2                      else
 140   2                      {
 141   3                              table_VAIN[0] = smg_du[VAIN3 % 10];
 142   3                              table_VAIN[1] = smg_du[VAIN3 / 10 % 10];
 143   3                              table_VAIN[2] = smg_du[VAIN3 / 100] & 0x7f;
 144   3                              table_VAIN[3] = 0xff;
 145   3                              table_VAIN[4] = 0xff;
 146   3                              table_VAIN[5] = 0xff;
 147   3                              table_VAIN[6] = smg_du[3];
 148   3                              table_VAIN[7] = 0xc1;   
 149   3                      }
 150   2              }
 151   1              else
 152   1              {
 153   2                      if(VIN_mode == 0)
 154   2                      {
 155   3                              table_VAIN_par[0] = smg_du[VP1 % 10];
 156   3                              table_VAIN_par[1] = smg_du[VP1 /10 % 10];
 157   3                              table_VAIN_par[2] = smg_du[VP1 / 100] & 0x7f;
 158   3                              table_VAIN_par[3] = 0xff;
 159   3                              table_VAIN_par[4] = 0xff;
 160   3                              table_VAIN_par[5] = 0xff;
 161   3                              table_VAIN_par[6] = smg_du[1];
 162   3                              table_VAIN_par[7] = 0x8c;
 163   3                      }
 164   2                      else
 165   2                      {
 166   3                              table_VAIN_par[0] = smg_du[VP3 % 10];
 167   3                              table_VAIN_par[1] = smg_du[VP3 /10 % 10];
 168   3                              table_VAIN_par[2] = smg_du[VP3 / 100] & 0x7f;
 169   3                              table_VAIN_par[3] = 0xff;
 170   3                              table_VAIN_par[4] = 0xff;
 171   3                              table_VAIN_par[5] = 0xff;
 172   3                              table_VAIN_par[6] = smg_du[3];
 173   3                              table_VAIN_par[7] = 0x8c;
 174   3                      }
 175   2              }
 176   1      }
 177          
 178          void HC573(u8 n,u8 value)
 179          {
C51 COMPILER V9.00   MAIN                                                                  04/08/2022 08:29:21 PAGE 4   

 180   1              switch(n)
 181   1              {
 182   2                      case 4: P2 = (P2 & 0x1f) | 0x80; P0 = value; P2 &= 0x1f; break;
 183   2                      case 5: P2 = (P2 & 0x1f) | 0xa0; P0 = value; P2 &= 0x1f; break;
 184   2                      case 6: P2 = (P2 & 0x1f) | 0xc0; P0 = value; P2 &= 0x1f; break;
 185   2                      case 7: P2 = (P2 & 0x1f) | 0xe0; P0 = value; P2 &= 0x1f; break;
 186   2              }
 187   1      }
 188          
 189          void Timer0Init(void)           //2毫秒@12.000MHz
 190          {
 191   1              AUXR |= 0x80;           //定时器时钟1T模式
 192   1              TMOD &= 0xF0;           //设置定时器模式
 193   1              TL0 = 0x40;             //设置定时初始值
 194   1              TH0 = 0xA2;             //设置定时初始值
 195   1              TF0 = 0;                //清除TF0标志
 196   1              TR0 = 1;                //定时器0开始计时
 197   1              ET0 = 1;
 198   1              EA = 1;
 199   1      }
 200          
 201          //void Delay10ms()              //@12.000MHz
 202          //{
 203          //      unsigned char i, j;
 204          //
 205          //      i = 117;
 206          //      j = 184;
 207          //      do
 208          //      {
 209          //              while (--j);
 210          //      } while (--i);
 211          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    837    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     55    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
