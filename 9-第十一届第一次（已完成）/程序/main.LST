C51 COMPILER V9.00   MAIN                                                                  04/03/2022 19:16:36 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"reg52.h"
   2          #include"key.h"
   3          #include"iic.h"
   4          #define u8 unsigned char
   5          #define u16 unsigned int
   6          sfr AUXR = 0x8e;
   7          
   8          u8 smg_duan[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
   9          u8 smg_wei[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
  10          u8 table_1[8],table_2[8],table_3[8];
  11          
  12          u8 count_key,count_dac,count_table_vol;
  13          u16 count_L1,dac;
  14          bit     key_flag,dac_flag,count_flag,table_vol_flag,L1_flag_1,L1_flag_2,L2_flag,L3_flag;
  15          extern u8 face_mode = 0,inv_key_val = 0;
  16          extern u16 count_val = 0;
  17          extern bit  key_val_flag = 0;
  18          extern int dac_thr_val = 0,count_H = 0,count_L = 0;
  19                                                                                                                                                                                       
  20          void Timer0Init(void);
  21          void LEDworking(void);
  22          void HC573(u8 n, u8 value);
  23          void table_convert(void);
  24          
  25          void main()
  26          {
  27   1      
  28   1              HC573(5,0x00);    //灭蜂鸣器继电器
  29   1              HC573(4,0xff);    //led全灭
  30   1              dac_thr_val = Read_byte_24c02(0x02)*10; 
  31   1              Timer0Init();             //定时器初始化
  32   1              while(1)
  33   1              {       LEDworking();   //实现led功能
  34   2                      if(dac_flag)
  35   2                      {
  36   3                              Write_8591(3);                        //????
  37   3                              dac = Read_8591(3)* 1.96 + 0.5;         
  38   3                      }       
  39   2                      if(key_flag){key_flag = 0;keyproc();}    //12ms按键
  40   2      
  41   2                      if(table_vol_flag){table_vol_flag = 0;table_convert();}   //0.3s界面刷新
  42   2                                                                 
  43   2              }
  44   1      }
  45          
  46          void display(void);
  47          void Timer0isr() interrupt 1
  48          {        
  49   1              if(++count_key == 6)       //按键12ms
  50   1              {
  51   2                      count_key = 0;
  52   2                      key_flag = 1;
  53   2              }       
  54   1              if(++count_dac >= 50)     //读电压0.1s
  55   1              {
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 19:16:36 PAGE 2   

  56   2                      dac_flag = 1;
  57   2              }
  58   1                        
  59   1              if(++count_L1 > 2500)    //5s
  60   1              {               
  61   2                      count_L1 = 0;
  62   2                      L1_flag_1 = 1;
  63   2              }
  64   1              if(++count_table_vol >= 150)     //界面刷新时间小于等于0.3s
  65   1              {
  66   2                      count_table_vol = 0;
  67   2                      table_vol_flag = 1;
  68   2              }
  69   1              display();
  70   1      }
  71          
  72          void LEDworking(void)
  73          {
  74   1              if((dac < dac_thr_val)&&(L1_flag_1 == 1))L1_flag_2 = 1;
  75   1              else{L1_flag_1 = 0;L1_flag_2 = 0;}
  76   1                              
  77   1              if((count_L % 2) != 0)L2_flag = 1;
  78   1              else L2_flag = 0;
  79   1              
  80   1              if(inv_key_val == 3)key_val_flag = 1;                   
  81   1              if(key_val_flag == 1)L3_flag = 1;               
  82   1              else L3_flag = 0;
  83   1      
  84   1              if(face_mode != 1)      //如果在设置dac_thr_val界面接着判断得话 可能回有计数误差
  85   1              {
  86   2                      if(dac > dac_thr_val)     //只有在电压大于阈值时才能判断 计数
  87   2                              {
  88   3                                      count_flag = 1;  //可以计数的标志
  89   3                              }
  90   2                        if((count_flag == 1)&&(dac <= dac_thr_val))    //一定要小于等于满足 只等于满足的话很难检测道等于的情况
  91   2                                      {
  92   3                                              count_flag = 0;         
  93   3                                              count_L++;                       //用两个int变量才能将范围扩大到7位 用long的话 会影响运行速度
  94   3                                              if((count_H >= 999)&&(count_L >= 9999))count_L = 9999;
  95   3                                              if(count_L >= 10000)
  96   3                                              {
  97   4                                                      count_L = 0;
  98   4                                                      count_H++;
  99   4                                                      if(count_H >= 999)count_H = 999;
 100   4                                              }
 101   3                                      }
 102   2                }
 103   1              EA = 0;         //关中断 不然LED会出现微量
 104   1              if((L1_flag_2 == 1)&&(L2_flag == 0)&&(L3_flag == 0))     //1亮  23不亮
 105   1                      HC573(4,~0x01);
 106   1              else if((L1_flag_2 == 0)&&(L2_flag == 1)&&(L3_flag == 0))        //2亮  13不亮
 107   1                      HC573(4,~0x02);
 108   1              else if((L1_flag_2 == 1)&&(L2_flag == 1)&&(L3_flag == 0))        //12亮  3不亮
 109   1                      HC573(4,~0x03);
 110   1              else if((L1_flag_2 == 0)&&(L2_flag == 0)&&(L3_flag == 1))        //3亮  12不亮
 111   1                      HC573(4,~0x04);
 112   1              else if((L1_flag_2 == 1)&&(L2_flag == 0)&&(L3_flag == 1))        //13亮  2不亮
 113   1                      HC573(4,~0x05);
 114   1              else if((L1_flag_2 == 0)&&(L2_flag == 1)&&(L3_flag == 1))        //23亮  1不亮
 115   1                      HC573(4,~0x06);
 116   1              else if((L1_flag_2 == 1)&&(L2_flag == 1)&&(L3_flag == 1))        //123都亮
 117   1                      HC573(4,~0x07);
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 19:16:36 PAGE 3   

 118   1              else if((L1_flag_2 == 0)&&(L2_flag == 0)&&(L3_flag == 0))        //123不都亮
 119   1                      HC573(4,0xff);
 120   1              EA = 1;                 
 121   1      }
 122          
 123          void display(void)
 124          {
 125   1              static u8 i;
 126   1              HC573(7,0xff);
 127   1              HC573(6,smg_wei[i]);
 128   1              if(face_mode == 0)HC573(7,table_1[i]);  
 129   1              if(face_mode == 1)HC573(7,table_2[i]);
 130   1              if(face_mode == 2)HC573(7,table_3[i]);
 131   1              i++;if(i >= 8)i = 0;            
 132   1      }
 133          
 134          void table_convert(void)
 135          {
 136   1              if(face_mode == 0)
 137   1              {
 138   2                      table_1[0] = smg_duan[dac % 10];
 139   2                      table_1[1] = smg_duan[dac / 10 % 10];
 140   2                      table_1[2] = smg_duan[dac / 100] & 0x7f;
 141   2                      table_1[3] = 0xff;
 142   2                      table_1[4] = 0xff;
 143   2                      table_1[5] = 0xff;
 144   2                      table_1[6] = 0xff;
 145   2                      table_1[7] = 0xc1;              //U
 146   2              }
 147   1              if(face_mode == 1)
 148   1              {
 149   2                      table_2[0] = smg_duan[dac_thr_val%10];
 150   2                      table_2[1] = smg_duan[dac_thr_val / 10 % 10];
 151   2                      table_2[2] = smg_duan[dac_thr_val / 100] & 0x7f;
 152   2                      table_2[3] = 0xff;
 153   2                      table_2[4] = 0xff;
 154   2                      table_2[5] = 0xff;
 155   2                      table_2[6] = 0xff;
 156   2                      table_2[7] = 0x8c;              //P
 157   2              }
 158   1              if(face_mode == 2)
 159   1              {
 160   2                      table_3[7] = 0xc8;               //N
 161   2                      table_3[0]  = smg_duan[count_L % 10];
 162   2      
 163   2                      if((count_H <= 0)&&(count_L < 10))
 164   2                      table_3[1]  = 0xff;      //按位显示 低位一定要考虑高位Count_H是否有值 不然会出现高位亮的时候 低位为0灭的情况
 165   2                      else
 166   2                      table_3[1]  = smg_duan[count_L / 10 % 10];
 167   2      
 168   2                      if((count_H <= 0)&&(count_L < 100))
 169   2                      table_3[2]  = 0xff;
 170   2                      else
 171   2                      table_3[2]  = smg_duan[count_L / 100 % 10];
 172   2      
 173   2                      if((count_H <= 0)&&(count_L < 1000))
 174   2                      table_3[3]  = 0xff;
 175   2                      else
 176   2                      table_3[3]  = smg_duan[count_L / 1000 % 10];
 177   2      
 178   2                      if(count_H <= 0)
 179   2                      table_3[4]  = 0xff;
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 19:16:36 PAGE 4   

 180   2                      else
 181   2                      table_3[4]  = smg_duan[count_H % 10];
 182   2      
 183   2                      if(count_H < 10)
 184   2                      table_3[5]  = 0xff;
 185   2                      else
 186   2                      table_3[5]  = smg_duan[count_H / 10 % 10];
 187   2      
 188   2                      if(count_H < 100)
 189   2                      table_3[6]  = 0xff;
 190   2                      else
 191   2                      table_3[6]  = smg_duan[count_H / 100 % 10];     
 192   2              }       
 193   1      }
 194                  
 195          void HC573(u8 n,u8 value)
 196          {
 197   1              switch(n)
 198   1              {
 199   2                      case 4:P2 = (P2 & 0x1f) | 0x80; P0 = value; P2 &= 0x1f; break;
 200   2                      case 5:P2 = (P2 & 0x1f) | 0xa0; P0 = value; P2 &= 0x1f; break;
 201   2                      case 6:P2 = (P2 & 0x1f) | 0xc0; P0 = value; P2 &= 0x1f; break;
 202   2                      case 7:P2 = (P2 & 0x1f) | 0xe0; P0 = value; P2 &= 0x1f; break;
 203   2              }
 204   1      } 
 205          
 206          void Timer0Init(void)           //2毫秒@12.000MHz
 207          {
 208   1              AUXR |= 0x80;           //定时器时钟1T模式
 209   1              TMOD &= 0xF0;           //设置定时器模式
 210   1              TL0 = 0x40;             //设置定时初始值
 211   1              TH0 = 0xA2;             //设置定时初始值
 212   1              TF0 = 0;                //清除TF0标志
 213   1              TR0 = 1;                //定时器0开始计时
 214   1              ET0 = 1;
 215   1              EA = 1;
 216   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1132    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     60    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      9    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
