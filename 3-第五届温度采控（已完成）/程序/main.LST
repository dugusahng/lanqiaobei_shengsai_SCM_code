C51 COMPILER V9.00   MAIN                                                                  04/03/2022 20:15:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"reg52.h"
   2          #include"key.h"
   3          #include"onewire.h"
   4          #include "intrins.h"
   5          #define u8 unsigned char
   6          #define u16 unsigned int
   7          sfr AUXR = 0x8e;
   8          
   9          extern u8 smg_duan[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  10          extern u8 down_table[8] = {0xbf,0xff,0xff,0xff,0xff,0xbf,0xff,0xff};
  11          u8 smg_wei[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80}; //从0x01开始是为方便温度阈值计数
  12          u8 table_1[8] = {0xbf,0xc0,0xbf,0xff,0xff,0xff,0xc0,0xc0};
  13          
  14          u8 temperature,count_temp,count_key,mode;
  15          u16 blink_time,blink_count; 
  16          bit     temp_flag,key_flag,blink_flag;
  17          extern u8 trg = 0,cont = 0,Tmin = 20,Tmax = 30;
  18          extern bit error_flag = 0,set_flag = 0 ;
  19                                                                                                                                                                                                                  
  20          void Delay100ms();                       //函数声明
  21          void Timer0Init(void);
  22          void HC573(u8 n, u8 value);
  23          void table_convert(void);
  24          
  25          void main()
  26          {
  27   1              u8 x;
  28   1              HC573(5,0x00);HC573(4,0xff);
  29   1      
  30   1              for(x = 0;x < 10;x++){temperature = rd_temperature(); Delay100ms();}
  31   1      
  32   1              if(temperature < Tmin)mode = 0;
  33   1              if((temperature >= Tmin)&&(temperature <= Tmax))mode = 1;
  34   1              if(temperature > Tmax)mode = 2; 
  35   1      
  36   1              Timer0Init();   
  37   1              while(1)
  38   1              {
  39   2      
  40   2                      if(temp_flag)
  41   2                      {
  42   3                              temp_flag = 0;
  43   3                              temperature = rd_temperature();         //读温度
  44   3      
  45   3                              table_convert();                           //数码管数组
  46   3      
  47   3                              if(temperature < Tmin)                  //温度小于温度下限
  48   3                              {
  49   4                                      mode = 0;                                       //开启模式0
  50   4                                      blink_time = 400;
  51   4                                      HC573(5,0x00);                     //关闭继电器
  52   4                              }
  53   3      
  54   3                              if((temperature >= Tmin)&&(temperature <= Tmax))
  55   3                              {                                               //温度大于等于温度下限，小于等于温度上限
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 20:15:39 PAGE 2   

  56   4                                      mode = 1;                         //开启模式1
  57   4                                      blink_time = 200;
  58   4                                      HC573(5,0x00);            //关闭继电器
  59   4                              }
  60   3      
  61   3                              if(temperature > Tmax)
  62   3                              {
  63   4                                      mode = 2;                                 //开启模式2
  64   4                                      blink_time = 100;
  65   4                                      HC573(5,0x10);                    //开启继电器
  66   4                              }               
  67   3                      }
  68   2      
  69   2                      if(error_flag == 0)
  70   2                      {
  71   3                              if(blink_flag)   HC573(4,~0x01);        //当闪烁计时等于给定模式的时间 时 开启L1                
  72   3                              else    HC573(4,0xff);                  //关闭L1                
  73   3                      }
  74   2      
  75   2                      if(key_flag){key_flag = 0;keyproc();}  //按键
  76   2      
  77   2              }
  78   1      }
  79          
  80          void display(void);                      //函数声明
  81          void Timer0isr() interrupt 1
  82          {
  83   1              count_temp++; count_key++; blink_count++;
  84   1              if(count_temp == 250){count_temp = 0;temp_flag = 1;}    //0.5s
  85   1      
  86   1              if(count_key == 6){count_key = 0;key_flag = 1;}   //12ms
  87   1      
  88   1              if(blink_count > blink_time){blink_count = 0;blink_flag = ~blink_flag;}    //控制闪烁
  89   1                      
  90   1      //      if(error_flag == 0)                                //与主函数中重复
  91   1      //      {
  92   1      //              if(blink_flag) HC573(4,~0x01);          
  93   1      //              else HC573(4,0xff);                             
  94   1      //      }
  95   1      
  96   1              display();                              //smg显示函数
  97   1      }
  98          
  99          void display(void)
 100          {
 101   1              static u8 i;                            //定义为静态变量，下次调用时值不变
 102   1              HC573(7,0xff);                          //消隐
 103   1              HC573(6,smg_wei[i]);                      //位选
 104   1              if(set_flag == 0) HC573(7,table_1[i]);  //段选
 105   1              else HC573(7,down_table[i]);              //段选
 106   1              i++;if(i >= 8)i = 0;            
 107   1      }
 108          
 109          void table_convert(void)
 110          {
 111   1              if(set_flag == 0)
 112   1              {
 113   2                      table_1[1] = smg_duan[mode];
 114   2                      table_1[6] = smg_duan[temperature / 10];
 115   2                      table_1[7] = smg_duan[temperature % 10];        
 116   2              }                       
 117   1      }
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 20:15:39 PAGE 3   

 118          
 119          void HC573(u8 n,u8 value)
 120          {
 121   1              switch(n)
 122   1              {
 123   2                      case 4:P2 = (P2 & 0x1f) | 0x80; P0 = value; P2 &= 0x1f; break;
 124   2                      case 5:P2 = (P2 & 0x1f) | 0xa0; P0 = value; P2 &= 0x1f; break;
 125   2                      case 6:P2 = (P2 & 0x1f) | 0xc0; P0 = value; P2 &= 0x1f; break;
 126   2                      case 7:P2 = (P2 & 0x1f) | 0xe0; P0 = value; P2 &= 0x1f; break;
 127   2              }
 128   1      } 
 129          
 130          void Timer0Init(void)           //2毫秒@12.000MHz
 131          {
 132   1              AUXR |= 0x80;           //定时器时钟1T模式
 133   1              TMOD &= 0xF0;           //设置定时器模式
 134   1              TL0 = 0x40;             //设置定时初始值
 135   1              TH0 = 0xA2;             //设置定时初始值
 136   1              TF0 = 0;                //清除TF0标志
 137   1              TR0 = 1;                //定时器0开始计时
 138   1              ET0 = 1;
 139   1              EA = 1;
 140   1      }
 141          
 142          void Delay100ms()               //@12.000MHz
 143          {
 144   1              unsigned char i, j, k;
 145   1      
 146   1              _nop_();
 147   1              _nop_();
 148   1              i = 5;
 149   1              j = 144;
 150   1              k = 71;
 151   1              do
 152   1              {
 153   2                      do
 154   2                      {
 155   3                              while (--k);
 156   3                      } while (--j);
 157   2              } while (--i);
 158   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    473    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     47       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
