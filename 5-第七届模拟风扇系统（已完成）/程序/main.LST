C51 COMPILER V9.00   MAIN                                                                  04/03/2022 21:51:36 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"reg52.h"
   2          #include"key.h"
   3          #include"onewire.h"
   4          
   5          sfr AUXR = 0x8e;
   6          
   7          #define u8 unsigned char
   8          #define u16 unsigned int
   9          
  10          u8 smg_duan[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  11          u8 smg_wei[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
  12          u8 temp_table[8];
  13          u8 time_table[8];
  14          
  15          extern u16 sec = 10;
  16          u8 temperature,count,count_temp,count_key,count_sec = 0;
  17          extern  u8 work_mode = 1,pwm_duty = 0,count_pwm = 0; 
  18          extern bit temp_flag = 0,key_flag = 0,s7_flag = 0;
  19          
  20          void Delay1ms();
  21          void Delayms(u16 ms);
  22          void HC573(u8 n,u8 value);
  23          void display(void);
  24          void table_convert(void);
  25          void Working(void);
  26          void Timer0Init(void);
  27          
  28          void main()
  29          {       
  30   1              u8 i;
  31   1              HC573(5,0x00);
  32   1              HC573(4,0xff);
  33   1              for(i = 0;i < 10;i++){temperature = rd_temperature();Delayms(100);}       
  34   1              Timer0Init();
  35   1              while(1)
  36   1              {       
  37   2                      EA = 0; 
  38   2                      Working();
  39   2                      EA = 1;          
  40   2                      if(temp_flag)
  41   2                      {
  42   3                              temp_flag = 0;
  43   3                              temperature = rd_temperature();
  44   3                      }
  45   2      
  46   2                      if(key_flag)
  47   2                      {
  48   3                              key_flag = 0;
  49   3                              Keyproc();
  50   3                      }
  51   2      
  52   2                      table_convert();
  53   2              }
  54   1      }
  55          
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 21:51:36 PAGE 2   

  56          void Working(void)
  57          {
  58   1              if(sec != 0)
  59   1              {
  60   2                      
  61   2                      if(work_mode == 1)
  62   2                      {
  63   3                              pwm_duty = 2;
  64   3                              
  65   3                      }
  66   2      
  67   2                      else if(work_mode == 2)
  68   2                      {       
  69   3                              pwm_duty = 3;
  70   3                              
  71   3                      }
  72   2      
  73   2                      else if(work_mode == 3)
  74   2                      {
  75   3                              pwm_duty = 7;                            
  76   3                      }                       
  77   2              }       
  78   1              if(sec == 0)
  79   1              {
  80   2                  count_sec = 0;
  81   2                      HC573(4,0xff);
  82   2              }       
  83   1              
  84   1      }
  85          
  86          void Timer0isr(void) interrupt 1
  87          {       
  88   1              count++;count_pwm++;
  89   1              if(count == 20)           //2ms
  90   1              {
  91   2                      count = 0;
  92   2                      count_key++;
  93   2                      count_temp++;
  94   2              }  
  95   1                       
  96   1              if(count_key == 6) //每12ms读一次按键
  97   1              {
  98   2                      count_key = 0;
  99   2                      key_flag = 1;     
 100   2              }
 101   1              
 102   1              if(count_temp == 250)   //每0.5s读一次温度
 103   1              {
 104   2                      count_temp = 0;
 105   2                      temp_flag = 1;
 106   2      
 107   2                      count_sec++;              //
 108   2              }
 109   1      
 110   1              if(sec != 0)
 111   1              {
 112   2                      if(count_sec == 2)                  
 113   2                      {       
 114   3                      count_sec = 0;          
 115   3                      sec--;
 116   3                      }
 117   2              }
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 21:51:36 PAGE 3   

 118   1      
 119   1              if(sec > 0)
 120   1              {
 121   2                      if(work_mode == 1)
 122   2                      {
 123   3                      if(count_pwm >= pwm_duty)
 124   3                              {                       
 125   4                                      HC573(4,0xff);                          
 126   4                              }
 127   3                                      
 128   3                              if(count_pwm == 10)
 129   3                              {
 130   4                                      count_pwm = 0;                          
 131   4                                      HC573(4,~0x01);                                 
 132   4                              }
 133   3                      }
 134   2                      else if(work_mode==2)
 135   2                      {
 136   3                      if(count_pwm >= pwm_duty)
 137   3                              {                        
 138   4                                      HC573(4,0xff);                          
 139   4                              }
 140   3                              if(count_pwm == 10)
 141   3                              {                               
 142   4                                      count_pwm = 0;
 143   4                                      HC573(4,~0x02);                                                         
 144   4                              }
 145   3                      }
 146   2                      else if(work_mode==3)
 147   2                      {
 148   3                      if(count_pwm >= pwm_duty)
 149   3                              {
 150   4                                       HC573(4,0xff);
 151   4                              }
 152   3                              if(count_pwm == 10)
 153   3                              {
 154   4                                       count_pwm = 0;
 155   4                                       HC573(4,~0x04);                                 
 156   4                              }
 157   3                      }
 158   2              } 
 159   1              display();                 //数码管显示
 160   1      }
 161          
 162          void display(void)
 163          {
 164   1              static u8 i; 
 165   1              HC573(7,0xff);
 166   1              HC573(6,smg_wei[i]);    
 167   1              if(s7_flag)
 168   1              {HC573(7,temp_table[i]);}
 169   1              else    
 170   1              {HC573(7,time_table[i]);}       
 171   1              i++;if(i >= 8)i = 0;    
 172   1      }
 173          
 174          void table_convert(void)
 175          {
 176   1              if(s7_flag)             //读温度模式
 177   1              {
 178   2                      temp_table[0] = 0xc6;
 179   2                      temp_table[1] = smg_duan[temperature % 10];
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 21:51:36 PAGE 4   

 180   2                      temp_table[2] = smg_duan[temperature / 10];
 181   2                      temp_table[3] = 0xff;
 182   2                      temp_table[4] = 0xff;
 183   2                      temp_table[5] = 0xbf;
 184   2                      temp_table[6] = smg_duan[4];
 185   2                      temp_table[7] = 0xbf;
 186   2              }
 187   1              else
 188   1              {               
 189   2                      time_table[0] = smg_duan[sec % 10];
 190   2                      time_table[1] = smg_duan[sec / 10 % 10];
 191   2                      time_table[2] = smg_duan[sec / 100 % 10];       
 192   2                      time_table[3] = smg_duan[sec / 1000];
 193   2                      time_table[4] = 0xff;
 194   2                      time_table[5] = 0xbf;
 195   2                      time_table[6] = smg_duan[work_mode];    
 196   2                      time_table[7] = 0xbf;
 197   2              }
 198   1      }
 199          
 200          void HC573(u8 n,u8 value)
 201          {
 202   1              switch(n)
 203   1              {
 204   2                      case 4: P0 = value; P2 = (P2 & 0x1f) | 0x80;  P2 &= 0x1f; break;
 205   2                      case 5: P0 = value; P2 = (P2 & 0x1f) | 0xa0;  P2 &= 0x1f; break;
 206   2                      case 6: P0 = value; P2 = (P2 & 0x1f) | 0xc0;  P2 &= 0x1f; break;
 207   2                      case 7: P0 = value; P2 = (P2 & 0x1f) | 0xe0;  P2 &= 0x1f; break;
 208   2              }
 209   1      }
 210          
 211          void Timer0Init(void)           //1ms@12.000MHz
 212          {
 213   1              AUXR |= 0x80;           //定时器时钟1T模式
 214   1              TMOD &= 0xF0;           //设置定时器模式
 215   1              TL0 = 0x50;             //设置定时初始值
 216   1              TH0 = 0xFB;             //设置定时初始值
 217   1              TF0 = 0;                //清除TF0标志
 218   1              TR0 = 1;                //定时器0开始计时
 219   1              ET0 = 1;
 220   1              EA = 1;
 221   1      }
 222          
 223          void Delay1ms()         //@12.000MHz
 224          {
 225   1              unsigned char i, j;
 226   1      
 227   1              i = 12;
 228   1              j = 169;
 229   1              do
 230   1              {
 231   2                      while (--j);
 232   2              } while (--i);
 233   1      }
 234          
 235          void Delayms(u16 ms)
 236          {
 237   1              while(ms--)
 238   1              {
 239   2                      Delay1ms();
 240   2              }
 241   1      }
C51 COMPILER V9.00   MAIN                                                                  04/03/2022 21:51:36 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    643    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     45       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
